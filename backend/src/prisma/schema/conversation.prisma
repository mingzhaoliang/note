model Conversation {
  id           String                    @id @default(cuid())
  updatedAt    DateTime                  @updatedAt
  createdAt    DateTime                  @default(now())
  participants ConversationParticipant[]
  messages     Message[]
}

model Message {
  id             String       @id @default(cuid())
  conversationId String
  conversation   Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)
  senderId       String
  sender         Profile      @relation(fields: [senderId], references: [id], onDelete: Cascade)
  seen           Boolean      @default(false)
  seenAt         DateTime?
  text           String
  createdAt      DateTime     @default(now())

  @@index([conversationId])
}

model ConversationParticipant {
  conversationId String
  conversation   Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)
  profileId      String
  profile        Profile      @relation(fields: [profileId], references: [id], onDelete: Cascade)

  @@id([conversationId, profileId])
}
