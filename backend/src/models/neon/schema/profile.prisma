model Profile {
  id            String                    @id
  username      String                    @unique
  user          User                      @relation(references: [id, username], fields: [id, username], onDelete: Cascade)
  name          String
  avatar        String?
  bio           String?
  private       Boolean                   @default(false)
  follower      Relationship[]            @relation("follower")
  following     Relationship[]            @relation("following")
  likes         PostLike[]
  posts         Post[]
  conversations ConversationParticipant[]
  messages      Message[]
  updatedAt     DateTime                  @updatedAt
  createdAt     DateTime                  @default(now())

  @@unique([id, username])
}

model Relationship {
  fromId    String
  from      Profile  @relation("following", references: [id], fields: [fromId], onDelete: Cascade)
  toId      String
  to        Profile  @relation("follower", references: [id], fields: [toId], onDelete: Cascade)
  status    Status   @default(PENDING)
  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())

  @@id([fromId, toId])
}

enum Status {
  PENDING
  CONFIRMED
}
