model Profile {
  id        String        @id @default(cuid())
  user      User          @relation(references: [id, username], fields: [userId, username], onDelete: Cascade)
  userId    String
  username  String
  name      String
  avatar    String?
  bio       String?
  follower  Follows[]     @relation("follower")
  following Follows[]     @relation("following")
  likes     PostLike[]
  posts     Post[]
  comments  PostComment[]

  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())

  @@unique([userId, username])
  @@index([userId, username])
}

model Follows {
  followerId  String
  followingId String
  updatedAt   DateTime @updatedAt
  createdAt   DateTime @default(now())

  follower  Profile @relation("follower", references: [id], fields: [followerId], onDelete: Cascade)
  following Profile @relation("following", references: [id], fields: [followingId], onDelete: Cascade)

  @@id([followerId, followingId])
}
