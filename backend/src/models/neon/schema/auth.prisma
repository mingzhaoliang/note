model User {
  id           String  @id
  email        String  @unique
  username     String  @unique
  passwordHash String?

  authSession   Session[]
  profile       Profile?
  account       Account?
  passwordReset PasswordReset[]

  @@unique([id, username])
}

model Account {
  providerId     String
  providerUserId String
  userId         String   @unique
  user           User     @relation(references: [id], fields: [userId], onDelete: Cascade)
  updatedAt      DateTime @updatedAt
  createdAt      DateTime @default(now())

  @@id([providerId, providerUserId])
}

model PasswordReset {
  tokenHash String   @id
  userId    String
  user      User     @relation(references: [id], fields: [userId], onDelete: Cascade)
  expiresAt DateTime
  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())

  @@index([userId])
}

model Session {
  id        String   @id
  userId    String
  user      User     @relation(references: [id], fields: [userId], onDelete: Cascade)
  expiresAt DateTime

  @@index([userId])
}
