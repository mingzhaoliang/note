model User {
  id            String    @id @default(cuid())
  email         String    @unique
  username      String    @unique
  passwordHash  String?
  deactivated   Boolean   @default(false)
  deactivatedAt DateTime?
  toBeDeletedAt DateTime?
  emailVerified Boolean   @default(false)

  authSession   Session[]
  profile       Profile?
  account       Account?
  passwordReset PasswordResetSession[]

  @@unique([id, username])
}

model Account {
  providerId     String
  providerUserId String
  userId         String   @unique
  user           User     @relation(references: [id], fields: [userId], onDelete: Cascade)
  updatedAt      DateTime @updatedAt
  createdAt      DateTime @default(now())

  @@id([providerId, providerUserId])
}

model PasswordResetSession {
  id            String   @id
  userId        String
  user          User     @relation(references: [id], fields: [userId], onDelete: Cascade)
  expiresAt     DateTime
  code          String
  email         String
  emailVerified Boolean  @default(false)
  updatedAt     DateTime @updatedAt
  createdAt     DateTime @default(now())

  @@index([userId])
}

model Session {
  id        String   @id
  userId    String
  user      User     @relation(references: [id], fields: [userId], onDelete: Cascade)
  expiresAt DateTime

  @@index([userId])
}
